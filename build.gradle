description = """
  Leviathan (pronounced /lɨˈvaɪ.əθən/; Hebrew: לִוְיָתָן, Modern Livyatan Tiberian
  Liwyāṯān ; "twisted, coiled"), is a sea monster referred to in the Tanakh and
  the Bible.

  It surfs the web, and retrieves data :)
"""

dependsOnChildren()

subprojects {
  //========================//
  //     Maven Config       //
  //========================//  
  version = '0.9-SNAPSHOT'
  groupId = 'com.zaubersoftware.leviathan' 

  //========================//
  //       Plugins          //  
  //========================//
  apply plugin: 'java'
  apply plugin: 'eclipse'
   
  //========================//
  //        Encoding        // 
  //========================//
  [compileJava, compileTestJava]*.options*.encoding = 'ISO-8859-1'


  //========================//
  // Dependency Management  //
  //========================//
  sourceCompatibility = 1.6   
  junitVersion = '4.9'
  mockitoVersion = '1.8.1' 
  commonsVersion = '3.49'
  ehcacheVersion = '2.1.0'
  commonsLangVersion = '2.5' 
  slf4jVersion = '1.6.1'
  commonsIoVersion  = '1.4'
  httpClientVersion = '4.1'
  springVersion  = '3.0.6.RELEASE'

  configurations.all {
    transitive = true

    exclude group: 'commons-logging'

    resolutionStrategy {
      failOnVersionConflict()

      force "commons-lang:commons-lang:${commonsLangVersion}", 
            "commons-io:commons-io:${commonsIoVersion}"

      force "com.zaubersoftware.commons:commons-base:${commonsVersion}",
            "com.zaubersoftware.commons.web:commons-web-proxy:${commonsVersion}",
            "com.zaubersoftware.commons.web:commons-web-transformation:${commonsVersion}"

      force "org.slf4j:slf4j-api:${slf4jVersion}",
            "org.slf4j:jcl-over-slf4j:${slf4jVersion}"

      force "net.sf.ehcache:ehcache-core:${ehcacheVersion}"

      force "org.apache.httpcomponents:httpcore:${httpClientVersion}",
            "org.apache.httpcomponents:httpclient:${httpClientVersion}"

      force "org.springframework:spring-context:${springVersion}", 
            "org.springframework:spring-test:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework:spring-oxm:${springVersion}",
            "org.springframework:spring-web:${springVersion}"
    }
  }

  dependencies {
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-all:${mockitoVersion}"
  }

  //========================//
  //      Repositories      //
  //========================//
  repositories {
      mavenCentral()
      mavenLocal()
  }

}
